syntax = "proto3";
option go_package = "/gen";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

// * * * * * Auth Service * * * * *

service AuthService {
    rpc Register(RegisterRequest) returns (RegisterResponse);
    rpc RegisterConfirm(RegisterConfirmRequest) returns (RegisterConfirmResponse);

    rpc Login(AuthenticateRequest) returns (AuthenticateResponse);

    rpc PasswordReset(PasswordResetRequest) returns (PasswordResetResponse);
    rpc PasswordRecover(PasswordRecoveryRequest) returns (PasswordRecoveryResponse);
    
    rpc Profile(ProfileRequest) returns (ProfileResponse);
}

message RegisterRequest {
    string email = 1;
	string password = 2;
	string name = 3;
	string token = 4;
	bool termsOk = 5;
}

message RegisterResponse {
    int32 id = 1;
}

message RegisterConfirmRequest {
    string token = 1;
}

message RegisterConfirmResponse {
    google.protobuf.Empty response = 1;
}

message AuthenticateRequest {
    string email = 1;
	string password = 2;

	bool rememberMe = 3;
	string userAgent = 4;
	string ipAddress = 5;

	string subject = 6;
	int64 expiresIn = 7;
	repeated string audience = 8;

	int32 method = 9;
}

message AuthenticateResponse {
    string tokenId = 1;
    string accessToken = 2;
    google.protobuf.Timestamp ExpirationTime = 3;
}

message PasswordResetRequest {
    string email = 1;
}

message PasswordResetResponse {
    google.protobuf.Empty response = 1;
}

message PasswordRecoveryRequest {
    string token = 1;
    string password = 2;
    string confirmPassword = 3;
}

message PasswordRecoveryResponse {
     google.protobuf.Empty response = 1;
}

message ProfileRequest {
    int32 userId = 1;
    string name = 2;
}

message ProfileResponse {
    User user = 1;
}

message User {
    int32 userId = 1;
    string name = 2;
    string email = 3;
    string rank = 4;
    string claim = 5;
    uint64 roles = 6;
    uint64 flags = 7;
    int64 createdAt = 8;
    int64 updatedAt = 9;
}

// * * * * * Event Service * * * * *

service EventService {
    rpc CreateEvent(CreateEventRequest) returns (CreateEventResponse);
    rpc GetEvents(GetEventsRequest) returns (GetEventsResponse);

    rpc CreateBet(CreateBetRequest) returns (CreateBetResponse);
    rpc GetBets(BetsRequest) returns (BetsResponse);

    rpc SetResult(FightResultRequest) returns (FightResultResponse);
}

message CreateEventRequest {
    string name = 1;
    repeated Fight fights = 2;
}

message CreateEventResponse {
    int32 eventId = 1;
}

message GetEventsRequest {
    google.protobuf.Empty response = 1;
}

message GetEventsResponse {
    int32 Count = 1;
    repeated Event events = 2;
}

message CreateBetRequest {
    int32 betId = 1;
    int32 fightId = 2;
    int32 userId = 3;
    int32 fighterId = 4;
}

message CreateBetResponse {
    int32 betId = 1;
}

message BetsRequest {
    int32 userId = 1;
}

message BetsResponse {
    int32 Count = 1;
    repeated Bet bets = 2;
}

message FightResultRequest {
    int32 fightId = 1;
    int32 winnerId = 2;
    bool notContest = 3;
}

message FightResultResponse {
     int32 fightId = 1;
}

message Fight {
    int32 fightId = 1;
    int32 eventId = 2;
    int32 fighterRedId = 3;
    int32 fighterBlueId = 4;
    bool isDone = 5;
    bool isCanceled = 6;
    bool notContest = 7;
    int32 result = 8;
    int64 createdAt = 9;
    int64 fightDate = 10;
}

message Event {
    int32 eventId = 1;
    string name = 2;
    repeated Fight fights = 3;
    bool isDone = 4;
}

// TODO change Bet and BetRequest models
message Bet {
    int32 betId = 1;
    int32 fightId = 2;
    int32 userId = 3;
    int32 fighterId = 4;
}


// * * * * * Fighter Service * * * * *

service FightersService {
    rpc SearchFightersCount(FightersRequest) returns (FightersCountResponse);
    rpc SearchFighters(FightersRequest) returns (FightersResponse);
}

message Fighter {
    int32 fighterId = 1;
    string name = 2;
    string nickName = 3;
    int32 division = 4;
    string status = 5;
    string hometown = 6;
    string trainsAt = 7;
    string fightingStyle = 8;
    int32 age = 9;
    float height = 10;
    float weight = 11;
    string octagonDebut = 12;
    int32 debutTimestamp = 13;
    float reach = 14;
    float legReach = 15;
    int32 wins = 16;
    int32 loses = 17;
    int32 draw = 18;
    string fighterUrl = 19;
    string imageUrl = 20;
    FighterStats stats = 21;
}

message FighterStats {
    int32 statId = 1;
    int32 fighterId = 2;
    int32 totalSigStrLanded = 3;
    int32 totalSigStrAttempted = 4;
    int32 strAccuracy = 5;
    int32 totalTkdLanded = 6;
    int32 totalTkdAttempted = 7;
    int32 tkdAccuracy = 8;
    float sigStrLanded = 9;
    float sigStrAbs = 10;
    int32 sigStrDefense = 11;
    int32 takedownDefense = 12;
    float takedownAvg = 13;
    float submissionAvg = 14;
    float knockdownAvg = 15;
    string avgFightTime = 16;
    int32 winByKO = 17;
    int32 winBySub = 18;
    int32 winByDec = 19;
}

message FightersRequest {
    string status = 1;
    repeated int32 fightersIds = 2;
}

message FightersResponse {
    repeated Fighter fighters = 1;
}

message FightersCountResponse {
    int32 count = 1;
}

// * * * * * * * * * * * * * * * * *